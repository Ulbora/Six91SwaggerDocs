basePath: /
definitions:
  handlers.AddressReq:
    properties:
      address:
        $ref: '#/definitions/six910-database-interface.Address'
        type: object
      storeId:
        type: integer
    type: object
  handlers.CartItemReq:
    properties:
      cartItem:
        $ref: '#/definitions/six910-database-interface.CartItem'
        type: object
      customerId:
        type: integer
      storeId:
        type: integer
    type: object
  handlers.ExcludedSubRegionReq:
    properties:
      excludedSubRegion:
        $ref: '#/definitions/six910-database-interface.ExcludedSubRegion'
        type: object
      storeId:
        type: integer
    type: object
  handlers.IncludedSubRegionReq:
    properties:
      includedSubRegion:
        $ref: '#/definitions/six910-database-interface.IncludedSubRegion'
        type: object
      storeId:
        type: integer
    type: object
  handlers.OrderCommentReq:
    properties:
      orderComment:
        $ref: '#/definitions/six910-database-interface.OrderComment'
        type: object
      storeId:
        type: integer
    type: object
  handlers.OrderItemReq:
    properties:
      orderItem:
        $ref: '#/definitions/six910-database-interface.OrderItem'
        type: object
      storeId:
        type: integer
    type: object
  handlers.OrderTransactionReq:
    properties:
      orderTransaction:
        $ref: '#/definitions/six910-database-interface.OrderTransaction'
        type: object
      storeId:
        type: integer
    type: object
  handlers.PaymentGatewayReq:
    properties:
      paymentGateway:
        $ref: '#/definitions/six910-database-interface.PaymentGateway'
        type: object
      storeId:
        type: integer
    type: object
  handlers.ProductCategory:
    properties:
      categoryId:
        type: integer
      productId:
        type: integer
    type: object
  handlers.ProductCategoryReq:
    properties:
      productCategory:
        $ref: '#/definitions/handlers.ProductCategory'
        type: object
      storeId:
        type: integer
    type: object
  handlers.ShipmentBoxReq:
    properties:
      shipmentBox:
        $ref: '#/definitions/six910-database-interface.ShipmentBox'
        type: object
      storeId:
        type: integer
    type: object
  handlers.ShipmentItemReq:
    properties:
      shipmentItem:
        $ref: '#/definitions/six910-database-interface.ShipmentItem'
        type: object
      storeId:
        type: integer
    type: object
  handlers.ShipmentReq:
    properties:
      shipment:
        $ref: '#/definitions/six910-database-interface.Shipment'
        type: object
      storeId:
        type: integer
    type: object
  handlers.SubRegionReq:
    properties:
      storeId:
        type: integer
      subRegion:
        $ref: '#/definitions/six910-database-interface.SubRegion'
        type: object
    type: object
  handlers.ZoneZipReq:
    properties:
      storeId:
        type: integer
      zoneZip:
        $ref: '#/definitions/six910-database-interface.ZoneZip'
        type: object
    type: object
  managers.Response:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  managers.ResponseID:
    properties:
      code:
        type: integer
      id:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  managers.User:
    properties:
      customerId:
        type: integer
      enabled:
        type: boolean
      oldPassword:
        type: string
      password:
        type: string
      role:
        type: string
      storeId:
        type: integer
      username:
        type: string
    type: object
  managers.UserResponse:
    properties:
      customerId:
        type: integer
      enabled:
        type: boolean
      role:
        type: string
      storeId:
        type: integer
      username:
        type: string
    type: object
  six910-database-interface.Address:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      county:
        type: string
      customerId:
        type: integer
      id:
        type: integer
      state:
        type: string
      type:
        type: string
      zip:
        type: string
    type: object
  six910-database-interface.Cart:
    properties:
      customerId:
        type: integer
      entered:
        type: string
      id:
        type: integer
      ipAddress:
        type: string
      storeId:
        type: integer
      updated:
        type: string
      userInfo:
        type: string
    type: object
  six910-database-interface.CartItem:
    properties:
      cartId:
        type: integer
      id:
        type: integer
      productId:
        type: integer
      quantity:
        type: integer
    type: object
  six910-database-interface.Category:
    properties:
      desc:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      parentCategoryId:
        type: integer
      storeId:
        type: integer
      thumbnail:
        type: string
    type: object
  six910-database-interface.Customer:
    properties:
      city:
        type: string
      company:
        type: string
      email:
        type: string
      entered:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      resetPassword:
        type: boolean
      state:
        type: string
      storeId:
        type: integer
      updated:
        type: string
      zip:
        type: string
    type: object
  six910-database-interface.DataStoreWriteLock:
    properties:
      dataStoreName:
        type: string
      locked:
        type: boolean
      lockedByUser:
        type: string
      lockedInstanceName:
        type: string
      lockedTime:
        type: string
      storeId:
        type: integer
    type: object
  six910-database-interface.Distributor:
    properties:
      company:
        type: string
      contactName:
        type: string
      id:
        type: integer
      phone:
        type: string
      storeId:
        type: integer
    type: object
  six910-database-interface.ExcludedSubRegion:
    properties:
      id:
        type: integer
      regionId:
        type: integer
      shippingMethodId:
        type: integer
      subRegionId:
        type: integer
    type: object
  six910-database-interface.IncludedSubRegion:
    properties:
      id:
        type: integer
      regionId:
        type: integer
      shippingMethodId:
        type: integer
      subRegionId:
        type: integer
    type: object
  six910-database-interface.Instances:
    properties:
      dataStoreName:
        type: string
      instanceName:
        type: string
      reloadDate:
        type: string
      storeId:
        type: integer
    type: object
  six910-database-interface.Insurance:
    properties:
      cost:
        type: number
      id:
        type: integer
      maxOrderAmount:
        type: number
      minOrderAmount:
        type: number
      storeId:
        type: integer
    type: object
  six910-database-interface.LocalDataStore:
    properties:
      dataStoreName:
        type: string
      reload:
        type: boolean
      reloadDate:
        type: string
      storeId:
        type: integer
    type: object
  six910-database-interface.Order:
    properties:
      billingAddress:
        type: string
      billingAddressId:
        type: integer
      customerId:
        type: integer
      customerName:
        type: string
      id:
        type: integer
      insurance:
        type: number
      orderDate:
        type: string
      orderNumber:
        type: string
      orderType:
        type: string
      pickup:
        type: boolean
      shippingAddress:
        type: string
      shippingAddressId:
        type: integer
      shippingHandling:
        type: number
      status:
        type: string
      storeId:
        type: integer
      subTotal:
        type: number
      taxes:
        type: number
      total:
        type: number
      updated:
        type: string
      username:
        type: string
    type: object
  six910-database-interface.OrderComment:
    properties:
      comment:
        type: string
      id:
        type: integer
      orderId:
        type: integer
      username:
        type: string
    type: object
  six910-database-interface.OrderItem:
    properties:
      backOrdered:
        type: boolean
      dropship:
        type: boolean
      id:
        type: integer
      orderId:
        type: integer
      productId:
        type: integer
      productName:
        type: string
      productShortDesc:
        type: string
      quantity:
        type: integer
    type: object
  six910-database-interface.OrderTransaction:
    properties:
      amount:
        type: number
      approval:
        type: string
      avs:
        type: string
      entered:
        type: string
      gwid:
        type: integer
      id:
        type: integer
      method:
        type: string
      orderId:
        type: integer
      referenceNumber:
        type: string
      responseCode:
        type: string
      responseMessage:
        type: string
      success:
        type: boolean
      transactionId:
        type: string
      type:
        type: string
    type: object
  six910-database-interface.PaymentGateway:
    properties:
      checkoutUrl:
        type: string
      clientId:
        type: string
      clientKey:
        type: string
      id:
        type: integer
      logoUrl:
        type: string
      postOrderUrl:
        type: string
      storePluginsId:
        type: integer
    type: object
  six910-database-interface.Plugins:
    properties:
      activateUrl:
        type: string
      category:
        type: string
      contactPhone:
        type: string
      developer:
        type: string
      developerAddress:
        type: string
      enabled:
        type: boolean
      fee:
        type: number
      id:
        type: integer
      isPgw:
        type: boolean
      oauthRedirectUrl:
        type: string
      pluginName:
        type: string
    type: object
  six910-database-interface.Product:
    properties:
      color:
        type: string
      cost:
        type: number
      currency:
        type: string
      depth:
        type: number
      desc:
        type: string
      distributorId:
        type: integer
      dropship:
        type: boolean
      entered:
        type: string
      freeShipping:
        type: boolean
      gtin:
        type: string
      height:
        type: number
      id:
        type: integer
      image1:
        type: string
      image2:
        type: string
      image3:
        type: string
      image4:
        type: string
      manufacturer:
        type: string
      map:
        type: number
      msrp:
        type: number
      multibox:
        type: boolean
      name:
        type: string
      parentProductId:
        type: integer
      price:
        type: number
      promoted:
        type: boolean
      salePrice:
        type: number
      searchable:
        type: boolean
      shipSeperately:
        type: boolean
      shippingMarkup:
        type: number
      shortDesc:
        type: string
      size:
        type: string
      sku:
        type: string
      specialProcessing:
        type: boolean
      specialProcessingType:
        type: string
      stock:
        type: integer
      stockAlert:
        type: integer
      storeId:
        type: integer
      thumbnail:
        type: string
      updated:
        type: string
      visible:
        type: boolean
      weight:
        type: number
      width:
        type: number
    type: object
  six910-database-interface.Region:
    properties:
      id:
        type: integer
      name:
        type: string
      regionCode:
        type: string
      storeId:
        type: integer
    type: object
  six910-database-interface.Shipment:
    properties:
      boxes:
        type: integer
      createDate:
        type: string
      id:
        type: integer
      insurance:
        type: number
      orderId:
        type: integer
      shippingHandling:
        type: number
      status:
        type: string
      updated:
        type: string
    type: object
  six910-database-interface.ShipmentBox:
    properties:
      boxNumber:
        type: integer
      cost:
        type: number
      depth:
        type: number
      dropship:
        type: boolean
      height:
        type: number
      id:
        type: integer
      insurance:
        type: number
      shipDate:
        type: string
      shipmentId:
        type: integer
      shippingAddress:
        type: string
      shippingAddressId:
        type: integer
      shippingMethodId:
        type: integer
      trackingNumber:
        type: string
      updated:
        type: string
      weight:
        type: number
      width:
        type: number
    type: object
  six910-database-interface.ShipmentItem:
    properties:
      id:
        type: integer
      orderItemId:
        type: integer
      quantity:
        type: integer
      shipmentBoxId:
        type: integer
      shipmentId:
        type: integer
      updated:
        type: string
    type: object
  six910-database-interface.ShippingCarrier:
    properties:
      carrier:
        type: string
      id:
        type: integer
      storeId:
        type: integer
      type:
        type: string
    type: object
  six910-database-interface.ShippingMethod:
    properties:
      cost:
        type: number
      handling:
        type: number
      id:
        type: integer
      insuranceId:
        type: integer
      maxOrderAmount:
        type: number
      maxWeight:
        type: integer
      minOrderAmount:
        type: number
      name:
        type: string
      regionId:
        type: integer
      shippingCarrierId:
        type: integer
      storeId:
        type: integer
    type: object
  six910-database-interface.Store:
    properties:
      city:
        type: string
      company:
        type: string
      currency:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      entered:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      localDomain:
        type: string
      logo:
        type: string
      oauthClientId:
        type: integer
      oauthSecret:
        type: string
      remoteDomain:
        type: string
      state:
        type: string
      storeName:
        type: string
      storeSlogan:
        type: string
      updated:
        type: string
      zip:
        type: string
    type: object
  six910-database-interface.StorePlugins:
    properties:
      activateUrl:
        type: string
      active:
        type: boolean
      apiKey:
        type: string
      category:
        type: string
      id:
        type: integer
      iframeUrl:
        type: string
      isPgw:
        type: boolean
      menuIconUrl:
        type: string
      menuTitle:
        type: string
      oauthClientId:
        type: integer
      oauthRedirectUrl:
        type: string
      oauthSecret:
        type: string
      pluginId:
        type: integer
      pluginName:
        type: string
      rekeyDate:
        type: string
      rekeyTryCount:
        type: integer
      storeId:
        type: integer
    type: object
  six910-database-interface.SubRegion:
    properties:
      id:
        type: integer
      name:
        type: string
      regionId:
        type: integer
      subRegionCode:
        type: string
    type: object
  six910-database-interface.ZoneZip:
    properties:
      excludedSubRegionId:
        type: integer
      id:
        type: integer
      includedSubRegionId:
        type: integer
      zipCode:
        type: string
    type: object
host: localhost:3002
info:
  contact:
    name: API Support
    url: http://www.ulboralabs.com/contact/form
  description: This is the Six910 (six nine ten) API
  license:
    name: GPL-3.0
    url: https://github.com/Ulbora/Six910/blob/master/LICENSE
  termsOfService: https://github.com/Ulbora/Six910/blob/master/tos.html
  title: Six910 API
  version: "1.0"
paths:
  /rs/address/add:
    post:
      consumes:
      - application/json
      description: Adds a new address for a customer to a store
      parameters:
      - description: address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/handlers.AddressReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new address
      tags:
      - Address
  /rs/address/delete/{id}/{cid}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a customer address from the store
      parameters:
      - description: address id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a address
      tags:
      - Address
  /rs/address/get/id/{id}/{cid}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a address
      parameters:
      - description: address id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Address'
      summary: Get details of a address by id
      tags:
      - Address
  /rs/address/get/list/{cid}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of customer addresses for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Address'
            type: array
      summary: Get list of address
      tags:
      - Address
  /rs/address/update:
    put:
      consumes:
      - application/json
      description: Update address data
      parameters:
      - description: address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/handlers.AddressReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a address
      tags:
      - Address
  /rs/cart/add:
    post:
      consumes:
      - application/json
      description: Adds a new cart to a store
      parameters:
      - description: cart
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Cart'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new cart
      tags:
      - Cart
  /rs/cart/delete/{id}/{cid}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a cart from the store
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: string
      - description: customer id
        in: path
        name: cid
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a cart
      tags:
      - Cart
  /rs/cart/get/{cid}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a cart
      parameters:
      - description: customer id
        in: path
        name: cid
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Cart'
      summary: Get details of a cart by id
      tags:
      - Cart
  /rs/cart/update:
    put:
      consumes:
      - application/json
      description: Update cart data
      parameters:
      - description: cart
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Cart'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a cart
      tags:
      - Cart
  /rs/cartItem/add:
    post:
      consumes:
      - application/json
      description: Adds a new Cart Item to a store
      parameters:
      - description: cartItem
        in: body
        name: cartItem
        required: true
        schema:
          $ref: '#/definitions/handlers.CartItemReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new Cart Item
      tags:
      - CartItem
  /rs/cartItem/delete/{id}/{prodId}/{cartId}:
    delete:
      consumes:
      - application/json
      description: Delete a Cart Item from the store
      parameters:
      - description: distributor id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: prodId
        required: true
        type: string
      - description: cart id
        in: path
        name: cartId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a CartItem
      tags:
      - CartItem
  /rs/cartItem/get/{cid}/{prodId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a Cart Item
      parameters:
      - description: customer id
        in: path
        name: cid
        required: true
        type: string
      - description: product id
        in: path
        name: prodId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.CartItem'
      summary: Get details of a CartItem by id
      tags:
      - CartItem
  /rs/cartItem/get/list/{cartId}/{cid}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of a Cart Item for a store
      parameters:
      - description: cart id
        in: path
        name: cartId
        required: true
        type: string
      - description: customer id
        in: path
        name: cid
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.CartItem'
            type: array
      summary: Get list of a CartItem
      tags:
      - CartItem
  /rs/cartItem/update:
    put:
      consumes:
      - application/json
      description: Update Cart Item data
      parameters:
      - description: cartItem
        in: body
        name: cartItem
        required: true
        schema:
          $ref: '#/definitions/handlers.CartItemReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a Cart Item
      tags:
      - CartItem
  /rs/category/add:
    post:
      consumes:
      - application/json
      description: Adds a new category to a store
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Category'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new category
      tags:
      - Category
  /rs/category/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a category from the store
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a category
      tags:
      - Category
  /rs/category/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Category'
      summary: Get details of a category by id
      tags:
      - Category
  /rs/category/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of categories for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Category'
            type: array
      summary: Get list of categories
      tags:
      - Category
  /rs/category/get/sub/list/{catId}:
    get:
      consumes:
      - application/json
      description: Get list of sub categories for a store
      parameters:
      - description: category id
        in: path
        name: catId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Category'
            type: array
      summary: Get list of sub categories
      tags:
      - Category
  /rs/category/update:
    put:
      consumes:
      - application/json
      description: Update category data
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Category'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a category
      tags:
      - Category
  /rs/customer/add:
    post:
      consumes:
      - application/json
      description: Adds a new customer to a store
      parameters:
      - description: customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Customer'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new customer
      tags:
      - Customer
  /rs/customer/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a customer from the store
      parameters:
      - description: customer id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a customer
      tags:
      - Customer
  /rs/customer/get/email/{email}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a customer
      parameters:
      - description: customer email
        in: path
        name: email
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Customer'
      summary: Get details of a customer by email
      tags:
      - Customer
  /rs/customer/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a customer
      parameters:
      - description: customer id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Customer'
      summary: Get details of a customer by id
      tags:
      - Customer
  /rs/customer/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of a customers for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Customer'
            type: array
      summary: Get list of a customers
      tags:
      - Customer
  /rs/customer/update:
    put:
      consumes:
      - application/json
      description: Update customer data
      parameters:
      - description: customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Customer'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a customer
      tags:
      - Customer
  /rs/dataStoreWriteLock/add:
    post:
      consumes:
      - application/json
      description: Adds a new dataStoreWriteLock
      parameters:
      - description: dataStoreWriteLock
        in: body
        name: dataStoreWriteLock
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.DataStoreWriteLock'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Add a new dataStoreWriteLock
      tags:
      - DataStoreWriteLock (indicates when a node in the cluster in editing a datastore)
  /rs/dataStoreWriteLock/get/{dataStore}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a dataStoreWriteLock
      parameters:
      - description: dataStore
        in: path
        name: dataStore
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.DataStoreWriteLock'
      summary: Get details of a dataStoreWriteLock
      tags:
      - DataStoreWriteLock (indicates when a node in the cluster in editing a datastore)
  /rs/dataStoreWriteLock/update:
    put:
      consumes:
      - application/json
      description: Update dataStoreWriteLock data
      parameters:
      - description: dataStoreWriteLock
        in: body
        name: dataStoreWriteLock
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.DataStoreWriteLock'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a dataStoreWriteLock
      tags:
      - DataStoreWriteLock (indicates when a node in the cluster in editing a datastore)
  /rs/datastore/add:
    post:
      consumes:
      - application/json
      description: Adds a new JSON datastore for store content, css and others used to sync UI
      parameters:
      - description: datastore
        in: body
        name: datastore
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.LocalDataStore'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Add a new JSON datastore
      tags:
      - 'Datastore (JSON Datastore used to sync UI when clustered: content or css or others)'
  /rs/datastore/get/{name}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a JSON datastore for store content, css and others used to sync UI
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.LocalDataStore'
      summary: Get details of a JSON datastore by name
      tags:
      - 'Datastore (JSON Datastore used to sync UI when clustered: content or css or others)'
  /rs/datastore/update:
    put:
      consumes:
      - application/json
      description: Update a JSON datastore for store content, css and others used to sync UI
      parameters:
      - description: datastore
        in: body
        name: datastore
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.LocalDataStore'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a JSON datastore
      tags:
      - 'Datastore (JSON Datastore used to sync UI when clustered: content or css or others)'
  /rs/distributor/add:
    post:
      consumes:
      - application/json
      description: Adds a new distributor to a store
      parameters:
      - description: distributor
        in: body
        name: distributor
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Distributor'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new distributor
      tags:
      - Distributor
  /rs/distributor/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a distributor from the store
      parameters:
      - description: distributor id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a distributor
      tags:
      - Distributor
  /rs/distributor/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a distributor
      parameters:
      - description: distributor id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Distributor'
      summary: Get details of a distributor by id
      tags:
      - Distributor
  /rs/distributor/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of distributors for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Distributor'
            type: array
      summary: Get list of distributors
      tags:
      - Distributor
  /rs/distributor/update:
    put:
      consumes:
      - application/json
      description: Update distributor data
      parameters:
      - description: distributor
        in: body
        name: distributor
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Distributor'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a distributor
      tags:
      - Distributor
  /rs/excludedSubRegion/add:
    post:
      consumes:
      - application/json
      description: Adds a new ExcludedSubRegion to a store
      parameters:
      - description: excludedSubRegion
        in: body
        name: excludedSubRegion
        required: true
        schema:
          $ref: '#/definitions/handlers.ExcludedSubRegionReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new ExcludedSubRegion
      tags:
      - Excluded Sub Regions (Excluded Geographic Sales Sub Regions)
  /rs/excludedSubRegion/delete/{id}/{regionId}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a ExcludedSubRegion from the store
      parameters:
      - description: excludedSubRegion id
        in: path
        name: id
        required: true
        type: string
      - description: region id
        in: path
        name: regionId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a ExcludedSubRegion
      tags:
      - Excluded Sub Regions (Excluded Geographic Sales Sub Regions)
  /rs/excludedSubRegion/get/list/{regionId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of ExcludedSubRegion for a store
      parameters:
      - description: region id
        in: path
        name: regionId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ExcludedSubRegion'
            type: array
      summary: Get list of ExcludedSubRegion
      tags:
      - Excluded Sub Regions (Excluded Geographic Sales Sub Regions)
  /rs/includedSubRegion/add:
    post:
      consumes:
      - application/json
      description: Adds new IncludedSubRegion to a store
      parameters:
      - description: includedSubRegion
        in: body
        name: includedSubRegion
        required: true
        schema:
          $ref: '#/definitions/handlers.IncludedSubRegionReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add new IncludedSubRegion
      tags:
      - Included Sub Regions (Included Geographic Sales Sub Regions)
  /rs/includedSubRegion/delete/{id}/{regionId}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete IncludedSubRegion from the store
      parameters:
      - description: includedSubRegion id
        in: path
        name: id
        required: true
        type: string
      - description: region id
        in: path
        name: regionId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a IncludedSubRegion
      tags:
      - Included Sub Regions (Included Geographic Sales Sub Regions)
  /rs/includedSubRegion/get/list/{regionId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of IncludedSubRegion for a store
      parameters:
      - description: region id
        in: path
        name: regionId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.IncludedSubRegion'
            type: array
      summary: Get list of IncludedSubRegion
      tags:
      - Included Sub Regions (Included Geographic Sales Sub Regions)
  /rs/instance/add:
    post:
      consumes:
      - application/json
      description: Adds a new datastore UI instance in a cluster
      parameters:
      - description: instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Instances'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Add a new datastore UI instance in a cluster
      tags:
      - Instance (datastore UI instance in a cluster)
  /rs/instance/get/list/{dataStoreName}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of datastore UI instance in a cluster
      parameters:
      - description: dataStoreName
        in: path
        name: dataStoreName
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Instances'
            type: array
      summary: Get list of datastore UI instance in a cluster
      tags:
      - Instance (datastore UI instance in a cluster)
  /rs/instance/get/name/{name}/{dataStoreName}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a datastore UI instance in a cluster
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: dataStoreName
        in: path
        name: dataStoreName
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Instances'
      summary: Get details of a datastore UI instance in a cluster
      tags:
      - Instance (datastore UI instance in a cluster)
  /rs/instance/update:
    put:
      consumes:
      - application/json
      description: Update datastore UI instance in a cluster
      parameters:
      - description: instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Instances'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a datastore UI instance in a cluster
      tags:
      - Instance (datastore UI instance in a cluster)
  /rs/insurance/add:
    post:
      consumes:
      - application/json
      description: Adds shipping insurance provider to a store
      parameters:
      - description: insurance
        in: body
        name: insurance
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Insurance'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add shipping insurance provider
      tags:
      - Insurance (Shipping Insurance)
  /rs/insurance/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a shipping insurance provider from the store
      parameters:
      - description: insurance id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a shipping insurance provider
      tags:
      - Insurance (Shipping Insurance)
  /rs/insurance/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a shipping insurance provider
      parameters:
      - description: insurance id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Insurance'
      summary: Get details of a shipping insurance provider by id
      tags:
      - Insurance (Shipping Insurance)
  /rs/insurance/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of shipping insurance providers for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Insurance'
            type: array
      summary: Get list of shipping insurance providers
      tags:
      - Insurance (Shipping Insurance)
  /rs/insurance/update:
    put:
      consumes:
      - application/json
      description: Update shipping insurance provider data
      parameters:
      - description: insurance
        in: body
        name: insurance
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Insurance'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update shipping insurance provider
      tags:
      - Insurance (Shipping Insurance)
  /rs/order/add:
    post:
      consumes:
      - application/json
      description: Adds a new order to a store
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Order'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new order
      tags:
      - Order
  /rs/order/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a order from the store
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a order
      tags:
      - Order
  /rs/order/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a order
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Order'
      summary: Get details of a order by id
      tags:
      - Order
  /rs/order/get/list/{cid}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of order for a store
      parameters:
      - description: customer Id
        in: path
        name: cid
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Order'
            type: array
      summary: Get list of order
      tags:
      - Order
  /rs/order/update:
    put:
      consumes:
      - application/json
      description: Update order data
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Order'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a order
      tags:
      - Order
  /rs/orderComment/add:
    post:
      consumes:
      - application/json
      description: Adds a new orderComment to a store
      parameters:
      - description: orderComment
        in: body
        name: orderComment
        required: true
        schema:
          $ref: '#/definitions/handlers.OrderCommentReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new orderComment
      tags:
      - OrderComment
  /rs/orderComment/get/list/{orderId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of orderComment for a store
      parameters:
      - description: order Id
        in: path
        name: orderId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.OrderComment'
            type: array
      summary: Get list of orderComment
      tags:
      - OrderComment
  /rs/orderItem/add:
    post:
      consumes:
      - application/json
      description: Adds a new orderItem to a store
      parameters:
      - description: orderItem
        in: body
        name: orderItem
        required: true
        schema:
          $ref: '#/definitions/handlers.OrderItemReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new orderItem
      tags:
      - OrderItem
  /rs/orderItem/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a orderItem from the store
      parameters:
      - description: orderItem id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a orderItem
      tags:
      - OrderItem
  /rs/orderItem/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a orderItem
      parameters:
      - description: orderItem id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.OrderItem'
      summary: Get details of a orderItem by id
      tags:
      - OrderItem
  /rs/orderItem/get/list/{orderId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of orderItem for a store
      parameters:
      - description: order Id
        in: path
        name: orderId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.OrderItem'
            type: array
      summary: Get list of orderItem
      tags:
      - OrderItem
  /rs/orderItem/update:
    put:
      consumes:
      - application/json
      description: Update orderItem data
      parameters:
      - description: orderItem
        in: body
        name: orderItem
        required: true
        schema:
          $ref: '#/definitions/handlers.OrderItemReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a orderItem
      tags:
      - OrderItem
  /rs/orderTransaction/add:
    post:
      consumes:
      - application/json
      description: Adds a new orderTransaction to a store
      parameters:
      - description: orderTransaction
        in: body
        name: orderTransaction
        required: true
        schema:
          $ref: '#/definitions/handlers.OrderTransactionReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new orderTransaction
      tags:
      - OrderTransaction
  /rs/orderTransaction/get/list/{orderId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of orderTransaction for a store
      parameters:
      - description: order Id
        in: path
        name: orderId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.OrderTransaction'
            type: array
      summary: Get list of orderTransaction
      tags:
      - OrderTransaction
  /rs/paymentGateway/add:
    post:
      consumes:
      - application/json
      description: Adds a new PaymentGateway to a store
      parameters:
      - description: paymentGateway
        in: body
        name: paymentGateway
        required: true
        schema:
          $ref: '#/definitions/handlers.PaymentGatewayReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new PaymentGateway
      tags:
      - PaymentGateway
  /rs/paymentGateway/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a PaymentGateway from the store
      parameters:
      - description: paymentGateway id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a PaymentGateway
      tags:
      - PaymentGateway
  /rs/paymentGateway/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a PaymentGateway
      parameters:
      - description: paymentGateway id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.PaymentGateway'
      summary: Get details of a PaymentGateway by id
      tags:
      - PaymentGateway
  /rs/paymentGateway/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of PaymentGateway for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.PaymentGateway'
            type: array
      summary: Get list of PaymentGateway
      tags:
      - PaymentGateway
  /rs/paymentGateway/update:
    put:
      consumes:
      - application/json
      description: Update PaymentGateway data
      parameters:
      - description: paymentGateway
        in: body
        name: paymentGateway
        required: true
        schema:
          $ref: '#/definitions/handlers.PaymentGatewayReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a PaymentGateway
      tags:
      - PaymentGateway
  /rs/plugin/add:
    post:
      consumes:
      - application/json
      description: Adds a new plugin to a store
      parameters:
      - description: plugin
        in: body
        name: plugin
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Plugins'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new plugin
      tags:
      - Plugins (Global all stores)
  /rs/plugin/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a plugin from the store
      parameters:
      - description: plugin id
        in: path
        name: id
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a plugin
      tags:
      - Plugins (Global all stores)
  /rs/plugin/get/id/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a plugin
      parameters:
      - description: plugin id
        in: path
        name: id
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Plugins'
      summary: Get details of a plugin by id
      tags:
      - Plugins (Global all stores)
  /rs/plugin/get/list/{start}/{end}:
    get:
      consumes:
      - application/json
      description: Get list of plugin for a store
      parameters:
      - description: start index zero based
        in: path
        name: start
        required: true
        type: string
      - description: end index zero based
        in: path
        name: end
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Plugins'
            type: array
      summary: Get list of plugin
      tags:
      - Plugins (Global all stores)
  /rs/plugin/update:
    put:
      consumes:
      - application/json
      description: Update plugin data
      parameters:
      - description: plugin
        in: body
        name: plugin
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Plugins'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a plugin
      tags:
      - Plugins (Global all stores)
  /rs/product/add:
    post:
      consumes:
      - application/json
      description: Adds a new product to a store
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Product'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new product
      tags:
      - Product
  /rs/product/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a products from the store
      parameters:
      - description: products id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a products
      tags:
      - Product
  /rs/product/get/category/{catId}/{storeId}/{start}/{end}:
    get:
      consumes:
      - application/json
      description: Get list of products for a store
      parameters:
      - description: category id
        in: path
        name: catId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: start index 0 based
        in: path
        name: start
        required: true
        type: string
      - description: end index
        in: path
        name: end
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Product'
            type: array
      summary: Get list of products by category
      tags:
      - Product
  /rs/product/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Product'
      summary: Get details of a product by id
      tags:
      - Product
  /rs/product/get/list/{storeId}/{start}/{end}:
    get:
      consumes:
      - application/json
      description: Get list of products for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: start index 0 based
        in: path
        name: start
        required: true
        type: string
      - description: end index
        in: path
        name: end
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Product'
            type: array
      summary: Get list of products
      tags:
      - Product
  /rs/product/get/name/{name}/{storeId}/{start}/{end}:
    get:
      consumes:
      - application/json
      description: Get list of products for a store
      parameters:
      - description: product name
        in: path
        name: name
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: start index 0 based
        in: path
        name: start
        required: true
        type: string
      - description: end index
        in: path
        name: end
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Product'
            type: array
      summary: Get list of products by product name
      tags:
      - Product
  /rs/product/update:
    put:
      consumes:
      - application/json
      description: Update product data
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Product'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a product
      tags:
      - Product
  /rs/productCategory/add:
    post:
      consumes:
      - application/json
      description: Adds a product to a category in a store
      parameters:
      - description: Product to Category
        in: body
        name: productCategory
        required: true
        schema:
          $ref: '#/definitions/handlers.ProductCategoryReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Add a product to a category
      tags:
      - ProductCategory
  /rs/productCategory/delete/{categoryId}/{productId}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a product from a category in a store
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      - description: product id
        in: path
        name: productId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a product from a category
      tags:
      - ProductCategory
  /rs/region/add:
    post:
      consumes:
      - application/json
      description: Adds a new region to a store
      parameters:
      - description: region
        in: body
        name: region
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Region'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new region
      tags:
      - Region (Geographic Sales Region)
  /rs/region/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a region from the store
      parameters:
      - description: region id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a region
      tags:
      - Region (Geographic Sales Region)
  /rs/region/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a region
      parameters:
      - description: region id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Region'
      summary: Get details of a region by id
      tags:
      - Region (Geographic Sales Region)
  /rs/region/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of regions for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Region'
            type: array
      summary: Get list of regions
      tags:
      - Region (Geographic Sales Region)
  /rs/region/update:
    put:
      consumes:
      - application/json
      description: Update region data
      parameters:
      - description: region
        in: body
        name: region
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Region'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a region
      tags:
      - Region (Geographic Sales Region)
  /rs/shipment/add:
    post:
      consumes:
      - application/json
      description: Adds a new shipment to a store
      parameters:
      - description: shipment
        in: body
        name: shipment
        required: true
        schema:
          $ref: '#/definitions/handlers.ShipmentReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new shipment
      tags:
      - Shipment
  /rs/shipment/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a shipment from the store
      parameters:
      - description: shipment id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a shipment
      tags:
      - Shipment
  /rs/shipment/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a shipment
      parameters:
      - description: shipment id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Shipment'
      summary: Get details of a shipment by id
      tags:
      - Shipment
  /rs/shipment/get/list/{orderId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of shipment for a store
      parameters:
      - description: order Id
        in: path
        name: orderId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.Shipment'
            type: array
      summary: Get list of shipment
      tags:
      - Shipment
  /rs/shipment/update:
    put:
      consumes:
      - application/json
      description: Update shipment data
      parameters:
      - description: shipment
        in: body
        name: shipment
        required: true
        schema:
          $ref: '#/definitions/handlers.ShipmentReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a shipment
      tags:
      - Shipment
  /rs/shipmentBox/add:
    post:
      consumes:
      - application/json
      description: Adds a new shipmentBox to a store
      parameters:
      - description: shipmentBox
        in: body
        name: shipmentBox
        required: true
        schema:
          $ref: '#/definitions/handlers.ShipmentBoxReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new shipmentBox
      tags:
      - ShipmentBox
  /rs/shipmentBox/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a shipmentBox from the store
      parameters:
      - description: shipment id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a shipmentBox
      tags:
      - ShipmentBox
  /rs/shipmentBox/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a shipmentBox
      parameters:
      - description: shipmentBox id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.ShipmentBox'
      summary: Get details of a shipmentBox by id
      tags:
      - ShipmentBox
  /rs/shipmentBox/get/list/{shipmentId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of shipmentBox for a store
      parameters:
      - description: shipment Id
        in: path
        name: shipmentId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ShipmentBox'
            type: array
      summary: Get list of shipmentBox
      tags:
      - ShipmentBox
  /rs/shipmentBox/update:
    put:
      consumes:
      - application/json
      description: Update shipmentBox data
      parameters:
      - description: shipmentBox
        in: body
        name: shipmentBox
        required: true
        schema:
          $ref: '#/definitions/handlers.ShipmentBoxReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a shipmentBox
      tags:
      - ShipmentBox
  /rs/shipmentItem/add:
    post:
      consumes:
      - application/json
      description: Adds a new shipmentItem to a store
      parameters:
      - description: shipmentItem
        in: body
        name: shipmentItem
        required: true
        schema:
          $ref: '#/definitions/handlers.ShipmentItemReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new shipmentItem
      tags:
      - ShipmentItem
  /rs/shipmentItem/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a shipmentItem from the store
      parameters:
      - description: shipmentItem id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a shipmentItem
      tags:
      - ShipmentItem
  /rs/shipmentItem/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a shipmentItem
      parameters:
      - description: shipmentItem id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.ShipmentItem'
      summary: Get details of a shipmentItem by id
      tags:
      - ShipmentItem
  /rs/shipmentItem/get/list/{shipmentId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of shipmentItem for a store
      parameters:
      - description: shipment Id
        in: path
        name: shipmentId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ShipmentItem'
            type: array
      summary: Get list of shipmentItem
      tags:
      - ShipmentItem
  /rs/shipmentItem/get/list/box/{boxNumber}/{shipmentId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of shipmentItem for a store
      parameters:
      - description: boxNumber
        in: path
        name: boxNumber
        required: true
        type: string
      - description: shipment Id
        in: path
        name: shipmentId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ShipmentItem'
            type: array
      summary: Get list of shipmentItem
      tags:
      - ShipmentItem
  /rs/shipmentItem/update:
    put:
      consumes:
      - application/json
      description: Update shipmentItem data
      parameters:
      - description: shipmentItem
        in: body
        name: shipmentItem
        required: true
        schema:
          $ref: '#/definitions/handlers.ShipmentItemReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a shipmentItem
      tags:
      - ShipmentItem
  /rs/shippingCarrier/add:
    post:
      consumes:
      - application/json
      description: Adds a new Shipping Carrier to a store
      parameters:
      - description: shippingCarrier
        in: body
        name: shippingCarrier
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.ShippingCarrier'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new Shipping Carrier
      tags:
      - ShippingCarrier
  /rs/shippingCarrier/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a Shipping Carrier from the store
      parameters:
      - description: shippingCarrier id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a Shipping Carrier
      tags:
      - ShippingCarrier
  /rs/shippingCarrier/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a Shipping Carrier
      parameters:
      - description: shippingCarrier id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.ShippingCarrier'
      summary: Get details of a Shipping Carrier by id
      tags:
      - ShippingCarrier
  /rs/shippingCarrier/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of Shipping Carrier for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ShippingCarrier'
            type: array
      summary: Get list of Shipping Carrier
      tags:
      - ShippingCarrier
  /rs/shippingCarrier/update:
    put:
      consumes:
      - application/json
      description: Update Shipping Carrier data
      parameters:
      - description: shippingCarrier
        in: body
        name: shippingCarrier
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.ShippingCarrier'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a Shipping Carrier
      tags:
      - ShippingCarrier
  /rs/shippingMethod/add:
    post:
      consumes:
      - application/json
      description: Adds a new shipping method to a store
      parameters:
      - description: shippingMethod
        in: body
        name: shippingMethod
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.ShippingMethod'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new shipping method
      tags:
      - ShippingMethod
  /rs/shippingMethod/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a  shipping method from the store
      parameters:
      - description: shippingMethod id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a  shipping method
      tags:
      - ShippingMethod
  /rs/shippingMethod/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a shipping method
      parameters:
      - description: shippingMethod id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.ShippingMethod'
      summary: Get details of a shipping method by id
      tags:
      - ShippingMethod
  /rs/shippingMethod/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of shipping method for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ShippingMethod'
            type: array
      summary: Get list of shipping method
      tags:
      - ShippingMethod
  /rs/shippingMethod/update:
    put:
      consumes:
      - application/json
      description: Update shipping method data
      parameters:
      - description: shippingMethod
        in: body
        name: shippingMethod
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.ShippingMethod'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a shipping method
      tags:
      - ShippingMethod
  /rs/store/add:
    post:
      consumes:
      - application/json
      description: Adds a new store to the system (only for OAuth2 stores)
      parameters:
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Store'
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new store
      tags:
      - Store
  /rs/store/delete/{storeName}/{localDomain}:
    delete:
      consumes:
      - application/json
      description: Delete a store from the system (only for OAuth2 stores)
      parameters:
      - description: store name
        in: path
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: path
        name: localDomain
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a store
      tags:
      - Store
  /rs/store/get/{storeName}/{localDomain}:
    get:
      consumes:
      - application/json
      description: Get details of a store
      parameters:
      - description: store name
        in: path
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: path
        name: localDomain
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.Store'
      summary: Get details of a store
      tags:
      - Store
  /rs/store/update:
    put:
      consumes:
      - application/json
      description: Update store data
      parameters:
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.Store'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a store
      tags:
      - Store
  /rs/storePlugin/add:
    post:
      consumes:
      - application/json
      description: Adds a new StorePlugin to a store
      parameters:
      - description: storePlugin
        in: body
        name: storePlugin
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.StorePlugins'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new StorePlugin
      tags:
      - StorePlugin
  /rs/storePlugin/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a StorePlugin from the store
      parameters:
      - description: storePlugin id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a StorePlugin
      tags:
      - StorePlugin
  /rs/storePlugin/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a StorePlugin
      parameters:
      - description: storePlugin id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.StorePlugins'
      summary: Get details of a StorePlugin by id
      tags:
      - StorePlugin
  /rs/storePlugin/get/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of StorePlugin for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.StorePlugins'
            type: array
      summary: Get list of StorePlugin
      tags:
      - StorePlugin
  /rs/storePlugin/update:
    put:
      consumes:
      - application/json
      description: Update StorePlugin data
      parameters:
      - description: storePlugin
        in: body
        name: storePlugin
        required: true
        schema:
          $ref: '#/definitions/six910-database-interface.StorePlugins'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a StorePlugin
      tags:
      - StorePlugin
  /rs/subRegion/add:
    post:
      consumes:
      - application/json
      description: Adds a new SubRegion to a store
      parameters:
      - description: subRegion
        in: body
        name: subRegion
        required: true
        schema:
          $ref: '#/definitions/handlers.SubRegionReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new SubRegion
      tags:
      - Sub Region (Geographic Sales Sub Regions)
  /rs/subRegion/delete/{id}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a SubRegion from the store
      parameters:
      - description: subRegion id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a SubRegion
      tags:
      - Sub Region (Geographic Sales Sub Regions)
  /rs/subRegion/get/id/{id}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a SubRegion
      parameters:
      - description: subRegion id
        in: path
        name: id
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/six910-database-interface.SubRegion'
      summary: Get details of a SubRegion by id
      tags:
      - Sub Region (Geographic Sales Sub Regions)
  /rs/subRegion/get/list/{regionId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of SubRegion for a store
      parameters:
      - description: region id
        in: path
        name: regionId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.SubRegion'
            type: array
      summary: Get list of SubRegion
      tags:
      - Sub Region (Geographic Sales Sub Regions)
  /rs/subRegion/update:
    put:
      consumes:
      - application/json
      description: Update SubRegion data
      parameters:
      - description: subRegion
        in: body
        name: subRegion
        required: true
        schema:
          $ref: '#/definitions/handlers.SubRegionReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a SubRegion
      tags:
      - Sub Region (Geographic Sales Sub Regions)
  /rs/user/{username}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get details of a user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.UserResponse'
      summary: Get details of a user
      tags:
      - User
  /rs/user/add:
    post:
      consumes:
      - application/json
      description: Adds a new user to a store
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/managers.User'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Add a new user
      tags:
      - User
  /rs/user/get/admin/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of admin users for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/managers.UserResponse'
            type: array
      summary: Get list of a admin users
      tags:
      - User
  /rs/user/get/customer/list/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of customer users for a store
      parameters:
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/managers.UserResponse'
            type: array
      summary: Get list of a customer users
      tags:
      - User
  /rs/user/update:
    put:
      consumes:
      - application/json
      description: Update user data
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/managers.User'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Update a user
      tags:
      - User
  /rs/zoneZip/add:
    post:
      consumes:
      - application/json
      description: Adds a new zip code zone to a store
      parameters:
      - description: zoneZip
        in: body
        name: zoneZip
        required: true
        schema:
          $ref: '#/definitions/handlers.ZoneZipReq'
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.ResponseID'
      summary: Add a new ZoneZip
      tags:
      - Zip Code Zone (For Geographic Sales Region)
  /rs/zoneZip/delete/{id}/{incId}/{exId}/{storeId}:
    delete:
      consumes:
      - application/json
      description: Delete a ZoneZips from the store
      parameters:
      - description: zoneZip id
        in: path
        name: id
        required: true
        type: string
      - description: included zip code zone id
        in: path
        name: incId
        required: true
        type: string
      - description: excluded zip code zone id
        in: path
        name: exId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/managers.Response'
      summary: Delete a ZoneZips
      tags:
      - Zip Code Zone (For Geographic Sales Region)
  /rs/zoneZip/exc/get/list/{exId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of excluded zip code zones in a sub region for a store
      parameters:
      - description: excluded zip code zone id
        in: path
        name: exId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ZoneZip'
            type: array
      summary: Get list of Excluded ZoneZips
      tags:
      - Zip Code Zone (For Geographic Sales Region)
  /rs/zoneZip/inc/get/list/{incId}/{storeId}:
    get:
      consumes:
      - application/json
      description: Get list of included zip code zones in a sub region for a store
      parameters:
      - description: included zip code zone id
        in: path
        name: incId
        required: true
        type: string
      - description: store storeId
        in: path
        name: storeId
        required: true
        type: string
      - description: apiKey required for non OAuth2 stores only
        in: header
        name: apiKey
        type: string
      - description: store name
        in: header
        name: storeName
        required: true
        type: string
      - description: store localDomain
        in: header
        name: localDomain
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OAuth2 client ID only for OAuth2 stores
        in: header
        name: clientId
        type: string
      - description: User ID only for OAuth2 stores
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/six910-database-interface.ZoneZip'
            type: array
      summary: Get list of Included ZoneZips
      tags:
      - Zip Code Zone (For Geographic Sales Region)
swagger: "2.0"
